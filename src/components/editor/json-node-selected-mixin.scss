@import '../../styles.scss';

// TODO: simplify the CSS needed to correctly highlight the selection

@mixin json-node-selected-mixin ($selection-background, $selection-color) {
  $selection-background-meta: lighten($selection-background, 15%);

  // entry selected
  &.selected {
    .header,
    .contents,
    .meta,
    .expand,
    .footer,
    :global(.key),
    :global(.value) {
      background-color: $selection-background !important;
      color: $selection-color;
    }

    .bracket,
    .separator,
    .index {
      color: $selection-background-meta;
    }

    .tag {
      background: $selection-background-meta;
    }
  }

  // key selected
  &.selected-key {
    > .contents-outer > .contents > :global(.identifier) > :global(.key),
    > .header-outer > .header > :global(.identifier) > :global(.key) {
      background-color: $selection-background;
      color: $selection-color;

      &.empty::after {
        content: none;
      }
    }
  }

  // value selected (part 1)
  &.selected-value > .contents-outer > .contents > :global(.value) {
    background-color: $selection-background;
    color: $selection-color;

    &.empty::after {
      content: none;
    }
  }

  &.selected :global(.collapsed-items),
  &.selected-value :global(.collapsed-items) {
    // TODO: this css is copied from CollapsedItems.scss. Figure out how to reuse this smartly with CSS or SASS
    background-color: $selection-background;
    background-image:
            linear-gradient($theme-color-light, $theme-color-light),
            linear-gradient(to bottom right, transparent 50.5%, $theme-color-light 50.5%),
            linear-gradient(to bottom left, transparent 50.5%, $theme-color-light 50.5%),
            linear-gradient(to top right, transparent 50.5%, $theme-color-light 50.5%),
            linear-gradient(to top left, transparent 50.5%, $theme-color-light 50.5%);
    color: $selection-color;

    :global(.expand-items) {
      color: $selection-color;

      :global(&:hover) {
        color: $red;
      }
    }
  }

  // value selected (part 2)
  &.selected-value {
    .meta,
    > .footer-outer > .footer,
    .props .contents,
    .props .header,
    .props .footer,
    .props .expand,
    .items .contents,
    .items .header,
    .items .footer,
    .items .expand {
      background-color: $selection-background !important;
      color: $selection-color;

      :global(.key),
      :global(.value) {
        background-color: $selection-background !important;
        color: $selection-color;
      }

      .index,
      .bracket,
      .separator {
        color: $selection-background-meta;
      }

      .tag {
        background: $selection-background-meta;
      }
    }
  }
}
